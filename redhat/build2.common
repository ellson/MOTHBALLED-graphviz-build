# $Id$ $Revision$

if {$isnoarch} {set pkgarch noarch} {set pkgarch $arch}

# set rpm options from database
set rpmopt [rpmbuildargs $redhat_release $own_]

#clean up any previous build
foreach f [glob -nocomplain $rpmbuild/RPMS/*/$pkg-* $rpmbuild/SRPMS/$pkg-* $rpmbuild/SOURCES/$pkg-* $rpmbuild/SPECS/$pkg* $rpmbuild/BUILD*/$pkg-* $work/$pkg*] {
    file delete -force $f
}

#ensure target sirs for sources exist
exec mkdir -p  $rpmbuild/SOURCES $rpmbuild/SPECS

set oldpwd [pwd]
cd $work

set SOURCES $path/SOURCES

catch {unset versions}
set index [getindex $graphviz_host $SOURCES]
set pat "$pkg-(\[0-9.\]*?$own).tar.gz"
foreach {. v} [regexp -all -inline -- $pat $index] {
  lappend versions $v
}
if {! [info exists versions]} {
    puts stderr "no $pkg snapshots found"
    exit
}
set version [lindex [lsort -decreasing -dictionary $versions] 0]

set sourcefile $pkg-$version.tar.gz

puts "getting $graphviz_host:$SOURCES/$sourcefile"

# get sourcefile into local temporary directory
getfile $graphviz_host $SOURCES $sourcefile
exec cp $sourcefile $rpmbuild/SOURCES

# extract appropriate specfile
set f [open /etc/system-release r]
set content [read $f]
close $f
set records [split $content "\n"]
foreach rec $records {
    set fields [split $rec " "]
    set release [lindex $fields 0]
    break
}

switch "$release" {
"Fedora" { exec tar zxOf $sourcefile $pkg-$version/redhat/$pkg.spec.fedora >$rpmbuild/SPECS/$pkg.spec }
"CentOS" { exec tar zxOf $sourcefile $pkg-$version/redhat/$pkg.spec.rhel >$rpmbuild/SPECS/$pkg.spec }
"Red" { exec tar zxOf $sourcefile $pkg-$version/redhat/$pkg.spec.rhel >$rpmbuild/SPECS/$pkg.spec }
}

puts "making..."
# make products
#puts "rpmbuild $rpmopt -tb $sourcefile"
#catch "exec rpmbuild $rpmopt -tb $sourcefile" buildlog
puts "rpmbuild $rpmopt -ba $rpmbuild/SPECS/$pkg.spec"
catch "exec rpmbuild $rpmopt -ba $rpmbuild/SPECS/$pkg.spec" buildlog

#set end_build_time [clock format [clock seconds]]

#cd $rpmbuild/BUILD/$pkg-$version/rtest
#catch "exec ./rtest.sh" rtestlog
#cd $work

set end_time [clock format [clock seconds]]

puts  "...done making."

set BUILDLOG $pkg-linux-buildlog-$version$dist.$pkgarch.txt
set f [open $BUILDLOG w]
puts $f $start_time
puts $f ""
puts $f $buildlog
puts $f ""
#puts $f $end_build_time
#puts $f ""
#puts $f $rtestlog
#puts $f ""
puts $f $end_time
close $f

set target $path/redhat/[string trim $dist .]
exec ssh $graphviz_host "mkdir -p $target/$arch/os $target/$arch/debug $target/src"

set srcprods [glob $rpmbuild/SRPMS/$pkg*$version*.rpm]
foreach fn $srcprods {
  # rpms timestamp is that of first build on that git commit
  puts "pushing $graphviz_host:$target/src/[file tail $fn]"
  putfile_noclobber $graphviz_host $target/src $fn
}

set archprods [glob $rpmbuild/RPMS/*/$pkg*$version*.rpm]
foreach fn $archprods {
  # rpms timestamp is that of first build on that git commit
  if {[string first debuginfo $fn] >= 0} {
    puts "pushing $graphviz_host:$target/$arch/debug/[file tail $fn]"
    putfile_noclobber $graphviz_host $target/$arch/debug $fn
  } {
    puts "pushing $graphviz_host:$target/$arch/os/[file tail $fn]"
    putfile_noclobber $graphviz_host $target/$arch/os $fn
  }
}
# $BUILDLOG timestamp is that of latest build
puts "pushing $graphviz_host:$target/$arch/os/[file tail $BUILDLOG]"
putfile $graphviz_host $target/$arch/os $BUILDLOG

exec ssh $graphviz_host createrepo -update $target/$arch/os/
exec ssh $graphviz_host createrepo -update $target/$arch/debug/ 
exec ssh $graphviz_host createrepo -update $target/src

cd $oldpwd
